/* Global Variables */
//=require jquery

$(document).on ("page:change ajax:success",function() {
      setUpMidAjaxBindings()

       $("#left-nav a").bind("ajax:success",
               function(evt, data, status, xhr){
                    $("div#mid-ajax").html(data);
                    window_resize_handler()
                    var htmlData = $.ajax({
			          url: '/bmet_work_orders/getTopBar',
			          dataType:"html",
			          async: false
			          }).responseText;
                	$('#top-bar').html(htmlData)
                	setUpWOfilters()
                    //setUpMidAjaxBindings()


       }).bind("ajax:error", function(evt, data, status, xhr){
                //idk what to do if error
                $("div#ajaxtest").text(data);
       });

       $("#left-nav a").bind("ajax:before",
               function(){
                    //$("div#ajaxtest").html('loading');
                    $("div#mid-ajax").html("<div class='loader'>");
                    $(".loader").show();
                    $("div#ajaxtest").html('');
                    $("#top-bar").html('');
                })

       $("#right-detail").bind("ajax:success",
               function(evt, data, status, xhr){
                   $("div#ajaxtest").html(data);
                   var wo_num=(window.location.pathname.split('/').pop());
                   var from='not new'
                   if (wo_num=='new'){
                   	wo_num=$('#field-box_item-id > div.item-id').text().split(" ").pop()
                   	from='new'
                   	/*$(".element_title").each(function(){
			       		if ($(this).text().match(wo_num)){
			       			$(this).parent().parent().addClass("mid-summary-selected")	
			       		}
		       		})*/
                   }
					var newurl= '/bmet_work_orders/midupdate/'+wo_num

                   var htmlData = $.ajax({
			          url: newurl,
			          dataType:"html",
			          async: false
			          }).responseText;
                   console.log(htmlData)
                   if (from=='not new'){
                   		var test = $('.mid-summary-selected').parent();
                   		test.html(htmlData)
                   		test.children('.mid-summary_ul_li').addClass("mid-summary-selected")
               		} else{
               			newhref=location.href.slice(0,-3) +'unhidden/'+wo_num
               			history.pushState(null,"",newhref)
               			htmlData='<a data-remote="true" href="'+newhref+'">'+htmlData+'</a>'
               			$('#mid-summary_ul').prepend(htmlData)
               			$('#mid-summary_ul').children().first().children('.mid-summary_ul_li').addClass("mid-summary-selected")
               			
               		}
                   window_resize_handler()

                   //console.log(htmlData)
       }).bind("ajax:error", function(evt, data, status, xhr){
       			console.log("fail")
                //idk what to do if error
       });

       if (window.location.toString().match(/bmet_work_orders/)) {
       		var toselect=(window.location.pathname).split('/').pop();
       		$(".element_title").each(function(){
       			if ($(this).text().match(toselect)){
       				$(this).parent().parent().addClass("mid-summary-selected")	
       			}
       		})


       		/*$('.extra-details_nav > .active').removeClass('active')
       		var para='a[href="'+window.location.hash+'"]'
       		$(para).parent().addClass('active')
     		$('div.tab-pane').removeClass('active')
       		$('#'+window.location.hash.substr(1)).addClass('active')*/
       		var para='a[href="'+window.location.hash+'"]'
       		$(para).click()
       		console.log('test')

      	}

});

function setUpMidAjaxBindings(){
	$("#mid-summary a, a#add-button").bind("ajax:success",
               function(evt, data, status, xhr){
               	console.log("qwere")
               	//console.log(data)
                    $("div#ajaxtest").html(data);
                    //history.pushState(null, '', this.href);
                    //console.log((this.href).split('/').pop())
                    $('#mid-summary_ul').children('a').children('.mid-summary-selected').removeClass('mid-summary-selected')
                    $(this).children('.mid-summary_ul_li').addClass("mid-summary-selected")
       }).bind("ajax:error", function(evt, data, status, xhr){
                //idk what to do if error
                               	console.log("qwee")

                $("div#ajaxtest").text(data);
       });

       $("#mid-summary a, a#add-button").bind("ajax:before",
               function(){
                    //$("div#ajaxtest").html('loading');
                    $("div#ajaxtest").html("<div class='loader'>");
                    $(".loader").show();
                })
}

$(document).on ("page:change",function() {
	if (history && history.pushState){
	  $(function(){
	   $('body').on('click', 'a', function(e){
	      $.getScript(this.href);
	      history.pushState(null, '', this.href);

	    });
	    $(window).bind("popstate", function(){
	      $.getScript(location.href);
	    });
	  });
	}
});

if (history && history.pushState){
  $(function(){
   $('body').on('click', '#right-detail', function(e){
   	console.log('form')
      $.getScript(this.href);
      history.pushState(null, '', this.href);
    });
    $(window).bind("popstate", function(){
      $.getScript(location.href);
    });
  });
}


window.addEventListener('page:change', function(){
	if (window.location.toString().match(/facility_dashboard/)) {
		$('#status-submit').click(function( event ) {
			$(".simple_form").attr("action", "/facility_dashboard/status");
		});
		$('#wo_finances-submit').click(function( event ) {
			$(".simple_form").attr("action", "/facility_dashboard/wo_finances");
		});
		$('#labor_hours-submit').click(function( event ) {
			$(".simple_form").attr("action", "/facility_dashboard/labor_hours");
		});
	}
}, false);

$(document).on ("page:fetch", function() {
	$('html,body,selector').css('cursor','wait');
})

$(document).on ("page:receive", function() {
	$('html,body,selector').css('cursor', 'auto');
})


window.addEventListener('page:change', function(){
	if (window.location.toString().match(/bmet_dashboard/)) {
		$('#status-submit').click(function( event ) {
			$(".simple_form").attr("action", "/bmet_dashboard/status");
		});
		$('#wo_finances-submit').click(function( event ) {
			$(".simple_form").attr("action", "/bmet_dashboard/wo_finances");
		});
		$('#labor_hours-submit').click(function( event ) {
			$(".simple_form").attr("action", "/bmet_dashboard/labor_hours");
		});
	}
}, false);





//window resizing
//if (window.location.toString().match(/facility_work_orders/) || window.location.toString().match(/facility_preventative_maintenances/) || window.location.toString().match(/facility_work_requests/) || window.location.toString().match(/bmet_work_orders/)) 

$(document).on ("page:change",function() {
	if (!(window.location.toString().match(/sign_in/) || window.location.toString().match(/users/) || window.location.toString().match(/public/) || window.location.toString().match(/dashboard/) || window.location.toString().match(/settings/) || window.location.toString().match(/admin/) )) {
		/* define variables */
		
		/* window resizing */

		window_resize_handler();

		if(window.attachEvent) {
			window.attachEvent('onresize', window_resize_handler);
		}else if(window.addEventListener) {
		    window.addEventListener('resize', window_resize_handler, true);
		}else {
		    //The browser does not support Javascript event binding
		}
		$('.chosen-select').chosen({width: "100%"})
	};
})

function show_convert_div(){
	$('#view-div').css("display", "none");
	$('#convert-form').css("display", "inline");
};
function show_pm_div(){
	$('#view-div').css("display", "inline");
	$('#convert-form').css("display", "none");
};

function window_resize_handler(){
	//source : http://stackoverflow.com/questions/1248081/get-the-browser-viewport-dimensions-with-javascript
	var window_width = document.documentElement.clientWidth;
	var window_height = document.documentElement.clientHeight;
	var mid_summary = document.getElementById("mid-summary");
	var right_detail = document.getElementById("right-detail");
	
	/* width */
	var col_size = ((window_width-240)/2 -1)
	if(mid_summary){
		mid_summary.style.width = col_size; //1px is vertical divider
	}
	if(right_detail){
		right_detail.style.width = col_size;
	}
	
	$('.mid-summary_ul_li').css("width", col_size);
	$('.mid-summary_ul_li_hr').css("width", col_size);

};

function edit_button_handler(){
	var object_view = document.getElementById("object-view");
	var object_form = document.getElementById("object-form");
	if (object_form.style.display === "none"){
		object_view.style.display="none";
		object_form.style.display="inline";
	}else{
		object_view.style.display="inline";
		object_form.style.display="none";
	}
}

$(document).on ("page:change",function() {
	if (window.location.toString().match(/facility_work_orders/) || window.location.toString().match(/bmet_work_orders/)) {

		setUpWOfilters();
	}


});

function setUpWOfilters(){
		$("#cbox0").prop("checked",true)
		$("#cbox1").prop("checked",true)
		$("#cbox2").prop("checked",true)

		addListenerToBox(document.getElementById("cbox0"))
		addListenerToBox(document.getElementById("cbox1"))
		addListenerToBox(document.getElementById("cbox2"))
}

function addListenerToBox(checkB){
	if(checkB.attachEvent) {
		(checkB).attachEvent('onchange', checkbox_filter_handler);
	}else if(checkB.addEventListener) {
		(checkB).addEventListener('change', checkbox_filter_handler, true);
	}
}

function checkbox_filter_handler(){
	if ($("#cbox0").prop("checked")==false){
		$(".status-0").parent().hide();
		$(".status-0").parent().siblings(".mid-summary_ul_li_hr").hide();
	}else{
		$(".status-0").parent().show()
		$(".status-0").parent().siblings(".mid-summary_ul_li_hr").show();
	}
	if ($("#cbox1").prop("checked")==false){
		$(".status-1").parent().hide()
		$(".status-1").parent().siblings(".mid-summary_ul_li_hr").hide();
	}else{
		$(".status-1").parent().show()
		$(".status-1").parent().siblings(".mid-summary_ul_li_hr").show();
	}
	if ($("#cbox2").prop("checked")==false){
		$(".status-2").parent().hide()
		$(".status-2").parent().siblings(".mid-summary_ul_li_hr").hide();
	}else{
		$(".status-2").parent().show()
		$(".status-2").parent().siblings(".mid-summary_ul_li_hr").show();
	}

};

function attrsort(attr, order){// Order can either be 'asc' or 'desc'
	var list_to_sort = document.getElementById("mid-summary_ul").getElementsByTagName("li");
	var nodeArray = new Array();
	for (var i = 0; i < list_to_sort.length; i++) {
		nodeArray[i] = new Array();
    	nodeArray[i][0] = list_to_sort[i].cloneNode(true);
    	nodeArray[i][1] = list_to_sort[i].parentNode.cloneNode(true);
	}
	nodeArray.sort(function(a,b) {
 		var reqA=a[0].getAttribute(attr).toLowerCase(), reqB=b[0].getAttribute(attr).toLowerCase()
 		if (reqA < reqB) {
 			if (order == 'desc') {
  				return -1; }
  			else {
  				return 1; }
  		}
 		if (reqA > reqB) {
 			if (order == 'desc') {
  				return 1; }
  			else {
  				return -1; }
  		}
 		return 0;
	});
	for (var i = 0; i < nodeArray.length; i++){
		list_to_sort[i].parentNode.replaceChild(nodeArray[i][0], list_to_sort[i]);
		list_to_sort[i].parentNode.parentNode.replaceChild(nodeArray[i][1], list_to_sort[i].parentNode);
	}
	      setUpMidAjaxBindings()

}

function sort_by_num(attr){
	var attribute = attr;
	var list_to_sort = document.getElementById("mid-summary_ul").getElementsByTagName("li");
	var nodeArray = new Array();
	for (var i = 0; i < list_to_sort.length; i++) {
		nodeArray[i] = new Array();
    	nodeArray[i][0] = list_to_sort[i].cloneNode(true);
    	nodeArray[i][1] = list_to_sort[i].parentNode.cloneNode(true);

	}
	nodeArray.sort(function(a,b) {
		return a[0].getAttribute(attribute) - b[0].getAttribute(attribute)
	});
	for (var i = 0; i < nodeArray.length; i++){
	 	list_to_sort[i].parentNode.replaceChild(nodeArray[i][0], list_to_sort[i]);
	 	list_to_sort[i].parentNode.parentNode.replaceChild(nodeArray[i][1], list_to_sort[i].parentNode);
	}
	      setUpMidAjaxBindings()

}

function printitemsort(attr){
	var list_to_sort = document.getElementsByTagName("tr");
	var nodeArray = new Array();
	for (var i = 0; i < list_to_sort.length; i++) {
		nodeArray[i] = list_to_sort[i].cloneNode(true);
	}
	console.log(nodeArray)
	nodeArray.sort(function(a,b) {
 		var reqA=a.getAttribute(attr).toLowerCase(), reqB=b.getAttribute(attr).toLowerCase()
 		if (reqA < reqB) {
 			return -1;
  		}
 		if (reqA > reqB) {
 			return 1;

  		}
 		return 0;
	});
	for (var i = 0; i < nodeArray.length; i++){
		list_to_sort[i].parentNode.replaceChild(nodeArray[i], list_to_sort[i]);
	}
}

$(document).on ("page:change ajax:success",function() {
   $('.dropdown-menu').on('click', function(e) {
       if($(this).hasClass('dropdown-menu-form')) {
           e.stopPropagation();
       }
   });
});

function printmainpage(){

	$(".status-text-0").show();
	$(".status-text-1").show();
	$(".status-text-2").show();
	$(".status-text-0").text("Unstarted");
	$(".status-text-1").text("In Progress");
	$(".status-text-2").text("Completed");
	document.getElementById("print-css-selection").href = '<%= stylesheet_path("application-print-main-list")%>';
	window.print();
	
	
	$(".status-text-0").hide();
	$(".status-text-1").hide();
	$(".status-text-2").hide();
	
}

function printdetailpage(){
	document.getElementById("print-css-selection").href = '<%= stylesheet_path("application-print-detail.css")%>'
	setTimeout(function(){window.print()},250); //fixes a printing bug on ff
}



// Callback that creates and populates a data table, 
// instantiates the pie chart, passes in the data and
// draws it.
function drawChart() {

	// Create the data table.
	var data = new google.visualization.DataTable();
	data.addColumn('string', 'Department');
	data.addColumn('number', 'Cost');
	$( ".department_name" ).each(function( index ) {
	  console.log( index + ": " + $( this ).text() );
	  data.addRows(1);
	  data.setCell(index,0,$(this).text());
	});
	$( ".sum_costs" ).each(function( index ) {
	  console.log( index + ": " + $( this ).text() );
	  data.setCell(index,1,Math.round($(this).text()));
	});


	// Set chart options
	var options = {'width':1000,
	             'height':400
	             };

	if (window.location.toString().match('/bmet_dashboard/wo_finances/item')) {
 		options['legend']={position: 'none'}
 	}

	// Instantiate and draw our chart, passing in some options.
	var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
	chart.draw(data, options);
}

function drawItemChart() {
	var unparsedText=$("#percents-text").text()
	var splittext=unparsedText.split(' ')
	var down= +splittext[0]
	var up= +(splittext[3]-splittext[0])
	var data

	if (window.location.toString().match('/bmet_dashboard/items/percent_down')) {
		data = google.visualization.arrayToDataTable([
	          ['State', 'number'],
	          ['Down',     down],
	          ['Up',     up]
	        ])
	}else{
		data = google.visualization.arrayToDataTable([
          ['State', 'number'],
          ['Created',     down],
          ['None',     up]
        ])
	}
	// Set chart options
	var options = {'width':1000,
	             'height':400
	             };


	// Instantiate and draw our chart, passing in some options.
	var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
	chart.draw(data, options);
}

function drawLaborChart() {

	// Create the data table.
	var data = new google.visualization.DataTable();
	data.addColumn('string', 'Department');
	data.addColumn('number', 'hours');
	$( ".technician_name" ).each(function( index ) {
	  data.addRows(1);
	  data.setCell(index,0,$(this).text());
	});
	$( ".sum_costs" ).each(function( index ) {
	  data.setCell(index,1,Math.round($(this).text()));
	});


	// Set chart options
	var options = {
	             'width':1000,
	             'height':500,
	         	 'vAxis': {minValue: 0}
	         	};

	// Instantiate and draw our chart, passing in some options.
	var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
	chart.draw(data, options);
}

function drawStatusChart() {

	// Create the data table.
	var theData={}
	theData['dates']=getDatesDashboard();

	var jsonData = $.ajax({
          url: location.pathname+'_ajax',
          dataType:"json",
          data: theData,
          async: false
          }).responseText;


	var data = new google.visualization.DataTable(jsonData);

	// Set chart options
	var options = {'width':1000,
	             'height':500,
	         	'isStacked':true,
	         	'colors':['#e9593e','#ffc207','#55aa2b']};

 	if (window.location.toString().match('/bmet_dashboard/status/wo_department') || window.location.toString().match('/bmet_dashboard/status/wo_owner')) {
 		delete options['colors']
 		options['isStacked']=false
 	}

	// Instantiate and draw our chart, passing in some options.
	var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
	chart.draw(data, options);
}

function drawIndexChart() {

	// Create the data table.

	var jsonData = $.ajax({
          url: $("#params_to_send").text(),
          dataType:"json",
          async: false
          }).responseText;


	var data = new google.visualization.DataTable(jsonData);

	// Set chart options
	var options = {'title':'Gantt Chart',
	             'width':1000,
	             'height':100000,
	         	colors:['#e9593e','#ffc207','#55aa2b']};

	// Instantiate and draw our chart, passing in some options.
	var chart = new google.visualization.Timeline(document.getElementById('chart_div'));
	chart.draw(data, options);
}

function drawCalendarChart() {

	// Create the data table.

	var jsonData = $.ajax({
          url: $("#params_to_send2").text(),
          dataType:"json",
          async: false
          }).responseText;


	var data = new google.visualization.DataTable(jsonData);

	// Set chart options
	var options = {'title':'Calendar',
	             'width':1000,
	             'height':500};

	// Instantiate and draw our chart, passing in some options.
	var chart = new google.visualization.Calendar(document.getElementById('chart_div2'));
	chart.draw(data, options);
}

$(document).on ("page:change",function() {
	if (window.location.toString().match(/bmet_dashboard/) && !window.location.toString().match('/bmet_dashboard/')) {
		var container = document.getElementById('visualization');
		var myjsonobj = $.ajax({
          url: '/bmet_dashboard/timelineAjax',
          dataType:"json",
          async: false
          }).responseText;

		
		var options={
			stack: false,
    		margin: {
      			item: 1, // minimal margin between items
      			axis: 1   // minimal margin between items and the axis
      		},
      		padding:1,
      		groupOrder: function (a, b) {
      			return a.value - b.value;
      		},
      		showMajorLabels: true,
      		showMinorLabels: true,
      		showCurrentTime: true,
      		showCustomTime:true    		 
    	}
		var parsedjson=jQuery.parseJSON(myjsonobj);
		var items=parsedjson[0];
		var groups=parsedjson[1];
		for (var x in items){
			items[x].start=new Date(items[x].start);
			items[x].end=new Date(items[x].end);
		}

		

		var timeline = new vis.Timeline(container, items, options);
		timeline.setGroups(groups)
		$('.link_to_work').each(function(){
			$(this).parent().parent().wrap(this)
		})
	};
})

function facility_wo_expire(){
	// Create the data table.
	

	// Set a callback to run when the Google Visualization API is loaded.
	google.setOnLoadCallback(drawStatusChart());
	console.log('testing')
	var theData={}
	theData['dates']=getDatesDashboard();


	var htmlData = $.ajax({
          //url: $("#params_to_send2").text(),
          url: '/facility_dashboard/statusExpireAjaxhtml',
          data: theData,
          dataType:"html",
          async: false
          }).responseText;

	$('#dashboard_results_div').html(htmlData);
}

function getDatesDashboard(){
	if ($("#date_div").text().length > 3) {
		var unparsedDate=$("#date_div").text();
		var dateArray=unparsedDate.split('-');
		var start_date=new Date(dateArray[0]);
		var end_date=new Date(dateArray[1]);
	} else{
		start_date=new Date()
		end_date=new Date()
	}
	var formattedDate={};
	formattedDate['start_date(1i)']=start_date.getFullYear();
	formattedDate['start_date(2i)']=1+start_date.getMonth();
	formattedDate['start_date(3i)']=start_date.getDate();
	formattedDate['end_date(1i)']=end_date.getFullYear();
	formattedDate['end_date(2i)']=1+end_date.getMonth();
	formattedDate['end_date(3i)']=end_date.getDate();

	return formattedDate

}

function timeDashboardDropdown(action, description){

	var theParams={submit_action: action};
	theParams['dates']=getDatesDashboard();
	theParams['submit_description']= description
	var htmlData = $.ajax({
          url: '/bmet_dashboard/timeDropdownAjax',
          data: theParams,
          dataType:"html",
          async: false
          }).responseText;

	$('#dashboard-forms-ajax').html(htmlData);
}

function noneDashboardDropdown(action, description){
	var theParams={submit_action: action};
	theParams['submit_description']= description
	var htmlData = $.ajax({
          url: '/bmet_dashboard/noneDropdownAjax',
          data: theParams,
          dataType:"html",
          async: false
          }).responseText;

	$('#dashboard-forms-ajax').html(htmlData);
}

$(document).on ("page:change",function() {
	if (window.location.toString().match('/bmet_dashboard/')){
		var theData={}
		theData['dates']=getDatesDashboard();
		params=jQuery.param(theData);
		$("#language-icons").children().each( function() {
			$(this).attr('href',$(this).attr('href')+'&'+params)
		})
	}
	if (window.location.toString().match('/bmet_dashboard/status/wo_completed')) {
	}
})
