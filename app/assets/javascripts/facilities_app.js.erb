/* Global Variables */
//=require jquery



window.addEventListener('page:change', function(){
	if (window.location.toString().match(/facility_dashboard/)) {
		$('#status-submit').click(function( event ) {
			$(".simple_form").attr("action", "/facility_dashboard/status");
		});
		$('#wo_finances-submit').click(function( event ) {
			$(".simple_form").attr("action", "/facility_dashboard/wo_finances");
		});
		$('#labor_hours-submit').click(function( event ) {
			$(".simple_form").attr("action", "/facility_dashboard/labor_hours");
		});
	}
}, false);





window.addEventListener('page:change', function(){
	if (window.location.toString().match(/bmet_dashboard/)) {
		$('#status-submit').click(function( event ) {
			$(".simple_form").attr("action", "/bmet_dashboard/status");
		});
		$('#wo_finances-submit').click(function( event ) {
			$(".simple_form").attr("action", "/bmet_dashboard/wo_finances");
		});
		$('#labor_hours-submit').click(function( event ) {
			$(".simple_form").attr("action", "/bmet_dashboard/labor_hours");
		});
	}
}, false);





//window resizing
//if (window.location.toString().match(/facility_work_orders/) || window.location.toString().match(/facility_preventative_maintenances/) || window.location.toString().match(/facility_work_requests/) || window.location.toString().match(/bmet_work_orders/)) 

$(document).on ("page:change",function() {
	if (!(window.location.toString().match(/sign_in/) || window.location.toString().match(/users/) || window.location.toString().match(/public/) || window.location.toString().match(/dashboard/) || window.location.toString().match(/settings/) || window.location.toString().match(/admin/) )) {
		/* define variables */
		
		/* window resizing */

		window_resize_handler();

		if(window.attachEvent) {
			window.attachEvent('onresize', window_resize_handler);
		}else if(window.addEventListener) {
		    window.addEventListener('resize', window_resize_handler, true);
		}else {
		    //The browser does not support Javascript event binding
		}
		$('.chosen-select').chosen({width: "100%"})
	};
})

// This area of code is causing javascript errors because convert-button isn't a real thing.
// Doesn't seem to perform any actual function, and I believe this has been around since way
// back when we created facilities app. I'll delete this eventually after making sure it's not important.

// if (window.location.toString().match(/facility_preventative_maintenances/)){
// 	$(document).on("page:change",function() {

// 		var cbutton = document.getElementById("convert-button");
// 		if(cbutton.attachEvent) {
// 			(cbutton).attachEvent('onclick', show_convert_div);
// 		}else if(cbutton.addEventListener) {
// 			(cbutton).addEventListener('click', show_convert_div, true);
// 		}	
// 		var cbbutton = document.getElementById("convert-back-button");
// 		if(cbbutton.attachEvent) {
// 			(cbbutton).attachEvent('onclick', show_pm_div);
// 		}else if(cbutton.addEventListener) {
// 			(cbbutton).addEventListener('click', show_pm_div, true);
// 		}	
// 	});
// }

function show_convert_div(){
	$('#view-div').css("display", "none");
	$('#convert-form').css("display", "inline");
};
function show_pm_div(){
	$('#view-div').css("display", "inline");
	$('#convert-form').css("display", "none");
};

function window_resize_handler(){
	//source : http://stackoverflow.com/questions/1248081/get-the-browser-viewport-dimensions-with-javascript
	var window_width = document.documentElement.clientWidth;
	var window_height = document.documentElement.clientHeight;
	var mid_summary = document.getElementById("mid-summary");
	var right_detail = document.getElementById("right-detail");
	
	/* width */
	var col_size = ((window_width-240)/2 -1)
	if(mid_summary){
		mid_summary.style.width = col_size; //1px is vertical divider
	}
	if(right_detail){
		right_detail.style.width = col_size;
	}
	
	$('.mid-summary_ul_li').css("width", col_size);
	$('.mid-summary_ul_li_hr').css("width", col_size);

};

function edit_button_handler(){
	var object_view = document.getElementById("object-view");
	var object_form = document.getElementById("object-form");
	if (object_form.style.display === "none"){
		object_view.style.display="none";
		object_form.style.display="inline";
	}else{
		object_view.style.display="inline";
		object_form.style.display="none";
	}
}

$(document).on ("page:change",function() {
	if (window.location.toString().match(/facility_work_orders/) || window.location.toString().match(/bmet_work_orders/)) {

		$("#cbox0").prop("checked",true)
		$("#cbox1").prop("checked",true)
		$("#cbox2").prop("checked",true)

		addListenerToBox(document.getElementById("cbox0"))
		addListenerToBox(document.getElementById("cbox1"))
		addListenerToBox(document.getElementById("cbox2"))
	}


});

function addListenerToBox(checkB){
	if(checkB.attachEvent) {
		(checkB).attachEvent('onchange', checkbox_filter_handler);
	}else if(checkB.addEventListener) {
		(checkB).addEventListener('change', checkbox_filter_handler, true);
	}
}

function checkbox_filter_handler(){
	if ($("#cbox0").prop("checked")==false){
		$(".status-0").parent().hide();
		$(".status-0").parent().siblings(".mid-summary_ul_li_hr").hide();
	}else{
		$(".status-0").parent().show()
		$(".status-0").parent().siblings(".mid-summary_ul_li_hr").show();
	}
	if ($("#cbox1").prop("checked")==false){
		$(".status-1").parent().hide()
		$(".status-1").parent().siblings(".mid-summary_ul_li_hr").hide();
	}else{
		$(".status-1").parent().show()
		$(".status-1").parent().siblings(".mid-summary_ul_li_hr").show();
	}
	if ($("#cbox2").prop("checked")==false){
		$(".status-2").parent().hide()
		$(".status-2").parent().siblings(".mid-summary_ul_li_hr").hide();
	}else{
		$(".status-2").parent().show()
		$(".status-2").parent().siblings(".mid-summary_ul_li_hr").show();
	}

};

function sort_by_date_created(){
	var list_to_sort = document.getElementById("mid-summary_ul").getElementsByTagName("li");
	var nodeArray = [];
	for (var i = 0; i < list_to_sort.length; i++) {
		nodeArray[i] = new Array();
    	nodeArray[i][0] = list_to_sort[i].cloneNode(true);
    	nodeArray[i][1] = list_to_sort[i].parentNode.cloneNode(true);
	}
	nodeArray.sort(function(a,b) {
 		var dateA=parseFloat(a[0].getAttribute("datecreated"));
 		var dateB=parseFloat(b[0].getAttribute("datecreated"));
		if (dateA < dateB) {
  			return 1;
  		}
 		if (dateA > dateB) {
  			return -1;
  		}
 		return 0;
	});
	for (var i = 0; i < nodeArray.length; i++){
		list_to_sort[i].parentNode.replaceChild(nodeArray[i][0], list_to_sort[i]);
		list_to_sort[i].parentNode.parentNode.replaceChild(nodeArray[i][1], list_to_sort[i].parentNode);
	}
}

function sort_by_date_desc(attr){
	var list_to_sort = document.getElementById("mid-summary_ul").getElementsByTagName("li");
	var nodeArray = new Array();
	for (var i = 0; i < list_to_sort.length; i++) {
		nodeArray[i] = new Array();
    	nodeArray[i][0] = list_to_sort[i].cloneNode(true);
    	nodeArray[i][1] = list_to_sort[i].parentNode.cloneNode(true);
	}
	nodeArray.sort(function(a,b) {
		if (a[0].getAttribute(attr) == "") {
			var dateA = 0;
		}
		else {
			var dateA = parseFloat(a[0].getAttribute(attr));
		}
 		if (b[0].getAttribute(attr) == "") {
 			dateB = 0;
 		}
 		else {
 			var dateB = parseFloat(b[0].getAttribute(attr));
 		}
		if (dateA < dateB) {
  			return 1;
  		}
 		if (dateA > dateB) {
  			return -1;
  		}
 		return 0;
	});
	for (var i = 0; i < nodeArray.length; i++){
		list_to_sort[i].parentNode.replaceChild(nodeArray[i][0], list_to_sort[i]);
		list_to_sort[i].parentNode.parentNode.replaceChild(nodeArray[i][1], list_to_sort[i].parentNode);
	}
}

function sort_by_date_asc(attr){
	var list_to_sort = document.getElementById("mid-summary_ul").getElementsByTagName("li");
	var nodeArray = new Array();
	for (var i = 0; i < list_to_sort.length; i++) {
		nodeArray[i] = new Array();
    	nodeArray[i][0] = list_to_sort[i].cloneNode(true);
    	nodeArray[i][1] = list_to_sort[i].parentNode.cloneNode(true);
	}
	nodeArray.sort(function(a,b) {
		if (a[0].getAttribute(attr) == "") {
			var dateA = 0;
		}
		else {
			var dateA = parseFloat(a[0].getAttribute(attr));
		}
 		if (b[0].getAttribute(attr) == "") {
 			dateB = 0;
 		}
 		else {
 			var dateB = parseFloat(b[0].getAttribute(attr));
 		}
		if (dateA > dateB) {
  			return 1;
  		}
 		if (dateA < dateB) {
  			return -1;
  		}
 		return 0;
	});
	for (var i = 0; i < nodeArray.length; i++){
		list_to_sort[i].parentNode.replaceChild(nodeArray[i][0], list_to_sort[i]);
		list_to_sort[i].parentNode.parentNode.replaceChild(nodeArray[i][1], list_to_sort[i].parentNode);
	}
}

function sort_by_name(attr){
	var list_to_sort = document.getElementById("mid-summary_ul").getElementsByTagName("li");
	var nodeArray = new Array();
	for (var i = 0; i < list_to_sort.length; i++) {
		nodeArray[i] = new Array();
    	nodeArray[i][0] = list_to_sort[i].cloneNode(true);
    	nodeArray[i][1] = list_to_sort[i].parentNode.cloneNode(true);
	}
	nodeArray.sort(function(a,b) {
 		var reqA=a[0].getAttribute(attr).toLowerCase(), reqB=b[0].getAttribute(attr).toLowerCase()
 		if (reqA < reqB) {
  			return -1;
  		}
 		if (reqA > reqB) {
  			return 1;
  		}
 		return 0;
	});
	for (var i = 0; i < nodeArray.length; i++){
		list_to_sort[i].parentNode.replaceChild(nodeArray[i][0], list_to_sort[i]);
		list_to_sort[i].parentNode.parentNode.replaceChild(nodeArray[i][1], list_to_sort[i].parentNode);
	}
}

function sort_by_num(attr){
	var attribute = attr;
	var list_to_sort = document.getElementById("mid-summary_ul").getElementsByTagName("li");
	var nodeArray = new Array();
	for (var i = 0; i < list_to_sort.length; i++) {
		nodeArray[i] = new Array();
    	nodeArray[i][0] = list_to_sort[i].cloneNode(true);
    	nodeArray[i][1] = list_to_sort[i].parentNode.cloneNode(true);

	}
	nodeArray.sort(function(a,b) {
		return a[0].getAttribute(attribute) - b[0].getAttribute(attribute)
	});
	for (var i = 0; i < nodeArray.length; i++){
	 	list_to_sort[i].parentNode.replaceChild(nodeArray[i][0], list_to_sort[i]);
	 	list_to_sort[i].parentNode.parentNode.replaceChild(nodeArray[i][1], list_to_sort[i].parentNode);
	}
}

$(document).on ("page:change",function() {
   $('.dropdown-menu').on('click', function(e) {
       if($(this).hasClass('dropdown-menu-form')) {
           e.stopPropagation();
       }
   });
});

function printmainpage(){

	$(".status-text-0").show();
	$(".status-text-1").show();
	$(".status-text-2").show();
	$(".status-text-0").text("Unstarted");
	$(".status-text-1").text("In Progress");
	$(".status-text-2").text("Completed");
	document.getElementById("print-css-selection").href = '<%= stylesheet_path("application-print-main-list")%>';
	window.print();
	
	
	$(".status-text-0").hide();
	$(".status-text-1").hide();
	$(".status-text-2").hide();
	
}

function printdetailpage(){
	document.getElementById("print-css-selection").href = '<%= stylesheet_path("application-print-detail.css")%>'
	setTimeout(function(){window.print()},250); //fixes a printing bug on ff
}



// Callback that creates and populates a data table, 
// instantiates the pie chart, passes in the data and
// draws it.
function drawChart() {

	// Create the data table.
	var data = new google.visualization.DataTable();
	data.addColumn('string', 'Department');
	data.addColumn('number', 'Cost');
	$( ".department_name" ).each(function( index ) {
	  console.log( index + ": " + $( this ).text() );
	  data.addRows(1);
	  data.setCell(index,0,$(this).text());
	});
	$( ".sum_costs" ).each(function( index ) {
	  console.log( index + ": " + $( this ).text() );
	  data.setCell(index,1,Math.round($(this).text()));
	});


	// Set chart options
	var options = {'title':'Costs by Department',
	             'width':600,
	             'height':400};

	// Instantiate and draw our chart, passing in some options.
	var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
	chart.draw(data, options);
}

function drawLaborChart() {

	// Create the data table.
	var data = new google.visualization.DataTable();
	data.addColumn('string', 'Department');
	data.addColumn('number', 'hours');
	$( ".technician_name" ).each(function( index ) {
	  data.addRows(1);
	  data.setCell(index,0,$(this).text());
	});
	$( ".sum_costs" ).each(function( index ) {
	  data.setCell(index,1,Math.round($(this).text()));
	});


	// Set chart options
	var options = {'title':'Hours by Technician',
	             'width':700,
	             'height':500};

	// Instantiate and draw our chart, passing in some options.
	var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
	chart.draw(data, options);
}

function drawStatusChart() {

	// Create the data table.

	var jsonData = $.ajax({
          url: $("#params_to_send").text(),
          dataType:"json",
          async: false
          }).responseText;


	var data = new google.visualization.DataTable(jsonData);

	// Set chart options
	var options = {'title':'Status Over Time',
	             'width':700,
	             'height':500,
	         	'isStacked':true,
	         	colors:['#e9593e','#ffc207','#55aa2b']};

	// Instantiate and draw our chart, passing in some options.
	var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
	chart.draw(data, options);
}

function drawIndexChart() {

	// Create the data table.

	var jsonData = $.ajax({
          url: $("#params_to_send").text(),
          dataType:"json",
          async: false
          }).responseText;


	var data = new google.visualization.DataTable(jsonData);

	// Set chart options
	var options = {'title':'Gantt Chart',
	             'width':700,
	             'height':100000,
	         	colors:['#e9593e','#ffc207','#55aa2b']};

	// Instantiate and draw our chart, passing in some options.
	var chart = new google.visualization.Timeline(document.getElementById('chart_div'));
	chart.draw(data, options);
}

function drawCalendarChart() {

	// Create the data table.

	var jsonData = $.ajax({
          url: $("#params_to_send2").text(),
          dataType:"json",
          async: false
          }).responseText;


	var data = new google.visualization.DataTable(jsonData);

	// Set chart options
	var options = {'title':'Calendar',
	             'width':1000,
	             'height':500};

	// Instantiate and draw our chart, passing in some options.
	var chart = new google.visualization.Calendar(document.getElementById('chart_div2'));
	chart.draw(data, options);
}

$(document).on ("page:change",function() {
	if (window.location.toString().match(/facility_dashboard/)) {
		var container = document.getElementById('visualization');
		var myjsonobj = $.ajax({
          url: $("#params_to_send3").text(),
          dataType:"json",
          async: false
          }).responseText;

		
		var options={
			stack: false,
    		margin: {
      			item: 1, // minimal margin between items
      			axis: 1   // minimal margin between items and the axis
      		},
      		padding:1,
      		groupOrder: function (a, b) {
      			return a.value - b.value;
      		},
      		showMajorLabels: true,
      		showMinorLabels: true    		 
    	}
		var parsedjson=jQuery.parseJSON(myjsonobj);
		var items=parsedjson[0];
		var groups=parsedjson[1];
		for (var x in items){
			items[x].start=new Date(items[x].start);
			items[x].end=new Date(items[x].end);
		}

		

		var timeline = new vis.Timeline(container, items, options);
		timeline.setGroups(groups)
		$('.link_to_work').each(function(){
			$(this).parent().parent().wrap(this)
		})
	};
})

function facility_wo_expire(){
	// Create the data table.
	

// Set a callback to run when the Google Visualization API is loaded.
	google.setOnLoadCallback(drawStatusChart());
	console.log('testing')

	var htmlData = $.ajax({
          url: $("#params_to_send2").text(),
          dataType:"html",
          async: false
          }).responseText;

	$('#dashboard_results_div').html(htmlData);


}
